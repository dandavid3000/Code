//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace QLDaiLy {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private BaoCaoDoanhSoDataTable tableBaoCaoDoanhSo;
        
        private BaoCaoCongNoDataTable tableBaoCaoCongNo;
        
        private DoanhSoDataTable tableDoanhSo;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["BaoCaoDoanhSo"] != null)) {
                    base.Tables.Add(new BaoCaoDoanhSoDataTable(ds.Tables["BaoCaoDoanhSo"]));
                }
                if ((ds.Tables["BaoCaoCongNo"] != null)) {
                    base.Tables.Add(new BaoCaoCongNoDataTable(ds.Tables["BaoCaoCongNo"]));
                }
                if ((ds.Tables["DoanhSo"] != null)) {
                    base.Tables.Add(new DoanhSoDataTable(ds.Tables["DoanhSo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BaoCaoDoanhSoDataTable BaoCaoDoanhSo {
            get {
                return this.tableBaoCaoDoanhSo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BaoCaoCongNoDataTable BaoCaoCongNo {
            get {
                return this.tableBaoCaoCongNo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DoanhSoDataTable DoanhSo {
            get {
                return this.tableDoanhSo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["BaoCaoDoanhSo"] != null)) {
                    base.Tables.Add(new BaoCaoDoanhSoDataTable(ds.Tables["BaoCaoDoanhSo"]));
                }
                if ((ds.Tables["BaoCaoCongNo"] != null)) {
                    base.Tables.Add(new BaoCaoCongNoDataTable(ds.Tables["BaoCaoCongNo"]));
                }
                if ((ds.Tables["DoanhSo"] != null)) {
                    base.Tables.Add(new DoanhSoDataTable(ds.Tables["DoanhSo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableBaoCaoDoanhSo = ((BaoCaoDoanhSoDataTable)(base.Tables["BaoCaoDoanhSo"]));
            if ((initTable == true)) {
                if ((this.tableBaoCaoDoanhSo != null)) {
                    this.tableBaoCaoDoanhSo.InitVars();
                }
            }
            this.tableBaoCaoCongNo = ((BaoCaoCongNoDataTable)(base.Tables["BaoCaoCongNo"]));
            if ((initTable == true)) {
                if ((this.tableBaoCaoCongNo != null)) {
                    this.tableBaoCaoCongNo.InitVars();
                }
            }
            this.tableDoanhSo = ((DoanhSoDataTable)(base.Tables["DoanhSo"]));
            if ((initTable == true)) {
                if ((this.tableDoanhSo != null)) {
                    this.tableDoanhSo.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableBaoCaoDoanhSo = new BaoCaoDoanhSoDataTable();
            base.Tables.Add(this.tableBaoCaoDoanhSo);
            this.tableBaoCaoCongNo = new BaoCaoCongNoDataTable();
            base.Tables.Add(this.tableBaoCaoCongNo);
            this.tableDoanhSo = new DoanhSoDataTable();
            base.Tables.Add(this.tableDoanhSo);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBaoCaoDoanhSo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBaoCaoCongNo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDoanhSo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void BaoCaoDoanhSoRowChangeEventHandler(object sender, BaoCaoDoanhSoRowChangeEvent e);
        
        public delegate void BaoCaoCongNoRowChangeEventHandler(object sender, BaoCaoCongNoRowChangeEvent e);
        
        public delegate void DoanhSoRowChangeEventHandler(object sender, DoanhSoRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BaoCaoDoanhSoDataTable : global::System.Data.TypedTableBase<BaoCaoDoanhSoRow> {
            
            private global::System.Data.DataColumn columnTenDaiLy;
            
            private global::System.Data.DataColumn columnSoPhieuXuat;
            
            private global::System.Data.DataColumn columnTongGiaTri;
            
            private global::System.Data.DataColumn columnTyLe;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaoCaoDoanhSoDataTable() {
                this.TableName = "BaoCaoDoanhSo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BaoCaoDoanhSoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BaoCaoDoanhSoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TenDaiLyColumn {
                get {
                    return this.columnTenDaiLy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SoPhieuXuatColumn {
                get {
                    return this.columnSoPhieuXuat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TongGiaTriColumn {
                get {
                    return this.columnTongGiaTri;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TyLeColumn {
                get {
                    return this.columnTyLe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaoCaoDoanhSoRow this[int index] {
                get {
                    return ((BaoCaoDoanhSoRow)(this.Rows[index]));
                }
            }
            
            public event BaoCaoDoanhSoRowChangeEventHandler BaoCaoDoanhSoRowChanging;
            
            public event BaoCaoDoanhSoRowChangeEventHandler BaoCaoDoanhSoRowChanged;
            
            public event BaoCaoDoanhSoRowChangeEventHandler BaoCaoDoanhSoRowDeleting;
            
            public event BaoCaoDoanhSoRowChangeEventHandler BaoCaoDoanhSoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBaoCaoDoanhSoRow(BaoCaoDoanhSoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaoCaoDoanhSoRow AddBaoCaoDoanhSoRow(string TenDaiLy, short SoPhieuXuat, int TongGiaTri, string TyLe) {
                BaoCaoDoanhSoRow rowBaoCaoDoanhSoRow = ((BaoCaoDoanhSoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TenDaiLy,
                        SoPhieuXuat,
                        TongGiaTri,
                        TyLe};
                rowBaoCaoDoanhSoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBaoCaoDoanhSoRow);
                return rowBaoCaoDoanhSoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BaoCaoDoanhSoDataTable cln = ((BaoCaoDoanhSoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BaoCaoDoanhSoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTenDaiLy = base.Columns["TenDaiLy"];
                this.columnSoPhieuXuat = base.Columns["SoPhieuXuat"];
                this.columnTongGiaTri = base.Columns["TongGiaTri"];
                this.columnTyLe = base.Columns["TyLe"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTenDaiLy = new global::System.Data.DataColumn("TenDaiLy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenDaiLy);
                this.columnSoPhieuXuat = new global::System.Data.DataColumn("SoPhieuXuat", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoPhieuXuat);
                this.columnTongGiaTri = new global::System.Data.DataColumn("TongGiaTri", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTongGiaTri);
                this.columnTyLe = new global::System.Data.DataColumn("TyLe", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTyLe);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaoCaoDoanhSoRow NewBaoCaoDoanhSoRow() {
                return ((BaoCaoDoanhSoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BaoCaoDoanhSoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BaoCaoDoanhSoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BaoCaoDoanhSoRowChanged != null)) {
                    this.BaoCaoDoanhSoRowChanged(this, new BaoCaoDoanhSoRowChangeEvent(((BaoCaoDoanhSoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BaoCaoDoanhSoRowChanging != null)) {
                    this.BaoCaoDoanhSoRowChanging(this, new BaoCaoDoanhSoRowChangeEvent(((BaoCaoDoanhSoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BaoCaoDoanhSoRowDeleted != null)) {
                    this.BaoCaoDoanhSoRowDeleted(this, new BaoCaoDoanhSoRowChangeEvent(((BaoCaoDoanhSoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BaoCaoDoanhSoRowDeleting != null)) {
                    this.BaoCaoDoanhSoRowDeleting(this, new BaoCaoDoanhSoRowChangeEvent(((BaoCaoDoanhSoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBaoCaoDoanhSoRow(BaoCaoDoanhSoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BaoCaoDoanhSoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BaoCaoCongNoDataTable : global::System.Data.TypedTableBase<BaoCaoCongNoRow> {
            
            private global::System.Data.DataColumn columnTenDaiLy;
            
            private global::System.Data.DataColumn columnNoDau;
            
            private global::System.Data.DataColumn columnPhatSinh;
            
            private global::System.Data.DataColumn columnNoCuoi;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaoCaoCongNoDataTable() {
                this.TableName = "BaoCaoCongNo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BaoCaoCongNoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BaoCaoCongNoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TenDaiLyColumn {
                get {
                    return this.columnTenDaiLy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoDauColumn {
                get {
                    return this.columnNoDau;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhatSinhColumn {
                get {
                    return this.columnPhatSinh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoCuoiColumn {
                get {
                    return this.columnNoCuoi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaoCaoCongNoRow this[int index] {
                get {
                    return ((BaoCaoCongNoRow)(this.Rows[index]));
                }
            }
            
            public event BaoCaoCongNoRowChangeEventHandler BaoCaoCongNoRowChanging;
            
            public event BaoCaoCongNoRowChangeEventHandler BaoCaoCongNoRowChanged;
            
            public event BaoCaoCongNoRowChangeEventHandler BaoCaoCongNoRowDeleting;
            
            public event BaoCaoCongNoRowChangeEventHandler BaoCaoCongNoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBaoCaoCongNoRow(BaoCaoCongNoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaoCaoCongNoRow AddBaoCaoCongNoRow(string TenDaiLy, int NoDau, int PhatSinh, int NoCuoi) {
                BaoCaoCongNoRow rowBaoCaoCongNoRow = ((BaoCaoCongNoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TenDaiLy,
                        NoDau,
                        PhatSinh,
                        NoCuoi};
                rowBaoCaoCongNoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBaoCaoCongNoRow);
                return rowBaoCaoCongNoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BaoCaoCongNoDataTable cln = ((BaoCaoCongNoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BaoCaoCongNoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTenDaiLy = base.Columns["TenDaiLy"];
                this.columnNoDau = base.Columns["NoDau"];
                this.columnPhatSinh = base.Columns["PhatSinh"];
                this.columnNoCuoi = base.Columns["NoCuoi"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTenDaiLy = new global::System.Data.DataColumn("TenDaiLy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenDaiLy);
                this.columnNoDau = new global::System.Data.DataColumn("NoDau", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoDau);
                this.columnPhatSinh = new global::System.Data.DataColumn("PhatSinh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhatSinh);
                this.columnNoCuoi = new global::System.Data.DataColumn("NoCuoi", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoCuoi);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaoCaoCongNoRow NewBaoCaoCongNoRow() {
                return ((BaoCaoCongNoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BaoCaoCongNoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BaoCaoCongNoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BaoCaoCongNoRowChanged != null)) {
                    this.BaoCaoCongNoRowChanged(this, new BaoCaoCongNoRowChangeEvent(((BaoCaoCongNoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BaoCaoCongNoRowChanging != null)) {
                    this.BaoCaoCongNoRowChanging(this, new BaoCaoCongNoRowChangeEvent(((BaoCaoCongNoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BaoCaoCongNoRowDeleted != null)) {
                    this.BaoCaoCongNoRowDeleted(this, new BaoCaoCongNoRowChangeEvent(((BaoCaoCongNoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BaoCaoCongNoRowDeleting != null)) {
                    this.BaoCaoCongNoRowDeleting(this, new BaoCaoCongNoRowChangeEvent(((BaoCaoCongNoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBaoCaoCongNoRow(BaoCaoCongNoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BaoCaoCongNoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DoanhSoDataTable : global::System.Data.TypedTableBase<DoanhSoRow> {
            
            private global::System.Data.DataColumn columnTenDaiLy;
            
            private global::System.Data.DataColumn columnSoPhieuXuat;
            
            private global::System.Data.DataColumn columnTongGiaTri;
            
            private global::System.Data.DataColumn columnTyLe;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DoanhSoDataTable() {
                this.TableName = "DoanhSo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DoanhSoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DoanhSoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TenDaiLyColumn {
                get {
                    return this.columnTenDaiLy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SoPhieuXuatColumn {
                get {
                    return this.columnSoPhieuXuat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TongGiaTriColumn {
                get {
                    return this.columnTongGiaTri;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TyLeColumn {
                get {
                    return this.columnTyLe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DoanhSoRow this[int index] {
                get {
                    return ((DoanhSoRow)(this.Rows[index]));
                }
            }
            
            public event DoanhSoRowChangeEventHandler DoanhSoRowChanging;
            
            public event DoanhSoRowChangeEventHandler DoanhSoRowChanged;
            
            public event DoanhSoRowChangeEventHandler DoanhSoRowDeleting;
            
            public event DoanhSoRowChangeEventHandler DoanhSoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDoanhSoRow(DoanhSoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DoanhSoRow AddDoanhSoRow(string TenDaiLy, short SoPhieuXuat, int TongGiaTri, string TyLe) {
                DoanhSoRow rowDoanhSoRow = ((DoanhSoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TenDaiLy,
                        SoPhieuXuat,
                        TongGiaTri,
                        TyLe};
                rowDoanhSoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDoanhSoRow);
                return rowDoanhSoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DoanhSoDataTable cln = ((DoanhSoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DoanhSoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTenDaiLy = base.Columns["TenDaiLy"];
                this.columnSoPhieuXuat = base.Columns["SoPhieuXuat"];
                this.columnTongGiaTri = base.Columns["TongGiaTri"];
                this.columnTyLe = base.Columns["TyLe"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTenDaiLy = new global::System.Data.DataColumn("TenDaiLy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenDaiLy);
                this.columnSoPhieuXuat = new global::System.Data.DataColumn("SoPhieuXuat", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoPhieuXuat);
                this.columnTongGiaTri = new global::System.Data.DataColumn("TongGiaTri", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTongGiaTri);
                this.columnTyLe = new global::System.Data.DataColumn("TyLe", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTyLe);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DoanhSoRow NewDoanhSoRow() {
                return ((DoanhSoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DoanhSoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DoanhSoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DoanhSoRowChanged != null)) {
                    this.DoanhSoRowChanged(this, new DoanhSoRowChangeEvent(((DoanhSoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DoanhSoRowChanging != null)) {
                    this.DoanhSoRowChanging(this, new DoanhSoRowChangeEvent(((DoanhSoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DoanhSoRowDeleted != null)) {
                    this.DoanhSoRowDeleted(this, new DoanhSoRowChangeEvent(((DoanhSoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DoanhSoRowDeleting != null)) {
                    this.DoanhSoRowDeleting(this, new DoanhSoRowChangeEvent(((DoanhSoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDoanhSoRow(DoanhSoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DoanhSoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BaoCaoDoanhSoRow : global::System.Data.DataRow {
            
            private BaoCaoDoanhSoDataTable tableBaoCaoDoanhSo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BaoCaoDoanhSoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBaoCaoDoanhSo = ((BaoCaoDoanhSoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenDaiLy {
                get {
                    try {
                        return ((string)(this[this.tableBaoCaoDoanhSo.TenDaiLyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenDaiLy\' in table \'BaoCaoDoanhSo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBaoCaoDoanhSo.TenDaiLyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short SoPhieuXuat {
                get {
                    try {
                        return ((short)(this[this.tableBaoCaoDoanhSo.SoPhieuXuatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SoPhieuXuat\' in table \'BaoCaoDoanhSo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBaoCaoDoanhSo.SoPhieuXuatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TongGiaTri {
                get {
                    try {
                        return ((int)(this[this.tableBaoCaoDoanhSo.TongGiaTriColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TongGiaTri\' in table \'BaoCaoDoanhSo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBaoCaoDoanhSo.TongGiaTriColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TyLe {
                get {
                    try {
                        return ((string)(this[this.tableBaoCaoDoanhSo.TyLeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TyLe\' in table \'BaoCaoDoanhSo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBaoCaoDoanhSo.TyLeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenDaiLyNull() {
                return this.IsNull(this.tableBaoCaoDoanhSo.TenDaiLyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenDaiLyNull() {
                this[this.tableBaoCaoDoanhSo.TenDaiLyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSoPhieuXuatNull() {
                return this.IsNull(this.tableBaoCaoDoanhSo.SoPhieuXuatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSoPhieuXuatNull() {
                this[this.tableBaoCaoDoanhSo.SoPhieuXuatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTongGiaTriNull() {
                return this.IsNull(this.tableBaoCaoDoanhSo.TongGiaTriColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTongGiaTriNull() {
                this[this.tableBaoCaoDoanhSo.TongGiaTriColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTyLeNull() {
                return this.IsNull(this.tableBaoCaoDoanhSo.TyLeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTyLeNull() {
                this[this.tableBaoCaoDoanhSo.TyLeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BaoCaoCongNoRow : global::System.Data.DataRow {
            
            private BaoCaoCongNoDataTable tableBaoCaoCongNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BaoCaoCongNoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBaoCaoCongNo = ((BaoCaoCongNoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenDaiLy {
                get {
                    try {
                        return ((string)(this[this.tableBaoCaoCongNo.TenDaiLyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenDaiLy\' in table \'BaoCaoCongNo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBaoCaoCongNo.TenDaiLyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NoDau {
                get {
                    try {
                        return ((int)(this[this.tableBaoCaoCongNo.NoDauColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoDau\' in table \'BaoCaoCongNo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBaoCaoCongNo.NoDauColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PhatSinh {
                get {
                    try {
                        return ((int)(this[this.tableBaoCaoCongNo.PhatSinhColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhatSinh\' in table \'BaoCaoCongNo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBaoCaoCongNo.PhatSinhColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NoCuoi {
                get {
                    try {
                        return ((int)(this[this.tableBaoCaoCongNo.NoCuoiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoCuoi\' in table \'BaoCaoCongNo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBaoCaoCongNo.NoCuoiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenDaiLyNull() {
                return this.IsNull(this.tableBaoCaoCongNo.TenDaiLyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenDaiLyNull() {
                this[this.tableBaoCaoCongNo.TenDaiLyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoDauNull() {
                return this.IsNull(this.tableBaoCaoCongNo.NoDauColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoDauNull() {
                this[this.tableBaoCaoCongNo.NoDauColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhatSinhNull() {
                return this.IsNull(this.tableBaoCaoCongNo.PhatSinhColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhatSinhNull() {
                this[this.tableBaoCaoCongNo.PhatSinhColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoCuoiNull() {
                return this.IsNull(this.tableBaoCaoCongNo.NoCuoiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoCuoiNull() {
                this[this.tableBaoCaoCongNo.NoCuoiColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DoanhSoRow : global::System.Data.DataRow {
            
            private DoanhSoDataTable tableDoanhSo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DoanhSoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDoanhSo = ((DoanhSoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenDaiLy {
                get {
                    try {
                        return ((string)(this[this.tableDoanhSo.TenDaiLyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenDaiLy\' in table \'DoanhSo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoanhSo.TenDaiLyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short SoPhieuXuat {
                get {
                    try {
                        return ((short)(this[this.tableDoanhSo.SoPhieuXuatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SoPhieuXuat\' in table \'DoanhSo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoanhSo.SoPhieuXuatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TongGiaTri {
                get {
                    try {
                        return ((int)(this[this.tableDoanhSo.TongGiaTriColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TongGiaTri\' in table \'DoanhSo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoanhSo.TongGiaTriColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TyLe {
                get {
                    try {
                        return ((string)(this[this.tableDoanhSo.TyLeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TyLe\' in table \'DoanhSo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDoanhSo.TyLeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenDaiLyNull() {
                return this.IsNull(this.tableDoanhSo.TenDaiLyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenDaiLyNull() {
                this[this.tableDoanhSo.TenDaiLyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSoPhieuXuatNull() {
                return this.IsNull(this.tableDoanhSo.SoPhieuXuatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSoPhieuXuatNull() {
                this[this.tableDoanhSo.SoPhieuXuatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTongGiaTriNull() {
                return this.IsNull(this.tableDoanhSo.TongGiaTriColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTongGiaTriNull() {
                this[this.tableDoanhSo.TongGiaTriColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTyLeNull() {
                return this.IsNull(this.tableDoanhSo.TyLeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTyLeNull() {
                this[this.tableDoanhSo.TyLeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BaoCaoDoanhSoRowChangeEvent : global::System.EventArgs {
            
            private BaoCaoDoanhSoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaoCaoDoanhSoRowChangeEvent(BaoCaoDoanhSoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaoCaoDoanhSoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BaoCaoCongNoRowChangeEvent : global::System.EventArgs {
            
            private BaoCaoCongNoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaoCaoCongNoRowChangeEvent(BaoCaoCongNoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BaoCaoCongNoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DoanhSoRowChangeEvent : global::System.EventArgs {
            
            private DoanhSoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DoanhSoRowChangeEvent(DoanhSoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DoanhSoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591