/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Login.java
 *
 * Created on Oct 26, 2010, 6:25:58 PM
 */

package javamail;
import java.net.*;
import java.io.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Timer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Dan
 */

public class Login extends javax.swing.JFrame {
    /** Creates new form Login */
    public static String User,PW,NormalUser,NormalPass,SvAd;
    public int oldMailNumber;
    public Login() {
        initComponents();
        mnChucNang.setEnabled(false);
        mnHeThong.setEnabled(false);
        
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        txtPassword = new javax.swing.JPasswordField();
        txtUser = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtSvAd = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnHeThong = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        txtThoat = new javax.swing.JMenuItem();
        mnChucNang = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        mnThayDoiSV = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Java Mail Client");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                formWindowDeactivated(evt);
            }
        });

        jLabel1.setText("Tên ");

        jLabel2.setText("Mật khẩu");

        jButton1.setText("Đăng Nhập");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        btnThoat.setText("Thoát");
        btnThoat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThoatMouseClicked(evt);
            }
        });

        jLabel3.setText("Server");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 36));
        jLabel4.setForeground(new java.awt.Color(0, 204, 51));
        jLabel4.setText("Java Mail");

        mnHeThong.setText("Hệ Thống");

        jMenuItem5.setText("Đăng nhập lại");
        jMenuItem5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem5MousePressed(evt);
            }
        });
        mnHeThong.add(jMenuItem5);

        txtThoat.setText("Thoát");
        txtThoat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtThoatMousePressed(evt);
            }
        });
        mnHeThong.add(txtThoat);

        jMenuBar1.add(mnHeThong);

        mnChucNang.setText("Chức Năng");
        mnChucNang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                mnChucNangMousePressed(evt);
            }
        });

        jMenuItem1.setText("Gửi Thư");
        jMenuItem1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItem1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem1MousePressed(evt);
            }
        });
        mnChucNang.add(jMenuItem1);

        jMenuItem2.setText("Nhận Thư");
        jMenuItem2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItem2MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem2MousePressed(evt);
            }
        });
        mnChucNang.add(jMenuItem2);

        jMenuItem3.setText("Liệt Kê Thư");
        jMenuItem3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem3MousePressed(evt);
            }
        });
        mnChucNang.add(jMenuItem3);

        jMenuItem4.setText("Xóa Thư");
        jMenuItem4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem4MousePressed(evt);
            }
        });
        mnChucNang.add(jMenuItem4);

        jMenu2.setText("Kiểm tra thư định kỳ");

        jMenuItem6.setText("Thiết lập theo ngày, tháng");
        jMenuItem6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem6MousePressed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem7.setText("Thiết lập theo giây");
        jMenuItem7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem7MousePressed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        mnChucNang.add(jMenu2);

        mnThayDoiSV.setText("Thay đổi địa chỉ Mail Server");
        mnThayDoiSV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                mnThayDoiSVMousePressed(evt);
            }
        });
        mnChucNang.add(mnThayDoiSV);

        jMenuBar1.add(mnChucNang);

        jMenu1.setText("Thông Tin");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenu1MousePressed(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtPassword, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSvAd, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(52, 52, 52))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSvAd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThoat)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThoatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThoatMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnThoatMouseClicked

    private void jMenuItem1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem1MouseClicked
        // TODO add your handling code here:
     
     
    }//GEN-LAST:event_jMenuItem1MouseClicked

    private void jMenuItem2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2MouseClicked

    private void jMenuItem2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem2MousePressed
        // TODO add your handling code here:
        new ReceiveMail().setVisible(true);
       
    }//GEN-LAST:event_jMenuItem2MousePressed

    private void jMenuItem1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem1MousePressed
        // TODO add your handling code here:
        new SendMail().setVisible(true);
    }//GEN-LAST:event_jMenuItem1MousePressed
    public void CheckMailSecond()
    {
        GetNewMail();
    }
    public void TempOldMailServer()
    {
         if(NormalUser != null)
        {
                String sentMessage = "";
                String receivedMessage = "";

                try {
                Socket s = new Socket(Login.SvAd, 110);
                BufferedReader br = new BufferedReader(new InputStreamReader(s.getInputStream(), "UTF8"));
                BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(s.getOutputStream(),"UTF8"));

                String us = Login.NormalUser;
                String pw = Login.NormalPass;

                receivedMessage=br.readLine();

                sentMessage="user "+us+"";
                bw.write(sentMessage);
                bw.newLine();
                bw.flush();
                receivedMessage=br.readLine();

                sentMessage="";
                sentMessage="pass "+pw+"";
                bw.write(sentMessage);
                bw.newLine();
                bw.flush();
                receivedMessage=br.readLine();

                String []ST= receivedMessage.split(" ");
                int k = Integer.parseInt(ST[4]);
                String temp = ""+k;

                String filetempOldMailServer = NormalUser+"TempOldMailServer.txt";
                File f = new File(filetempOldMailServer);
                if (f.exists())
                    f.delete();
                
                BufferedWriter fw;
                fw = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(filetempOldMailServer),"UTF-8"));
                fw.write(temp);
                fw.close();

                sentMessage="Quit";
                bw.write(sentMessage);
                bw.newLine();
                bw.flush();

                br.close();
                bw.close();
                s.close();

            }
                catch (IOException e)
                {
                   System.out.println("Lỗi sai thông tin Mail server : " + e.getMessage());
            }
                    // note cho nay
                    sentMessage ="quit";
        }
    }

    public void SaveOldMail() throws FileNotFoundException, UnsupportedEncodingException, IOException
    {
        //Ham de save lai tat ca cac mail moi khi close lai
        //Tao 1 file tam de bao so mail cu mac dinh ban dau la ko bat dau ung voi ten nguoi dung
        //Kiem tra neu co file tam. luu mail cu ... neu co thi lay gia tri mail. ko co thi k = 0;
        if((NormalUser != null))
        {
            String filetempOldMail = NormalUser+"TempOldMail.txt";
            File fi = new File(filetempOldMail);

            if(!fi.exists())
                oldMailNumber =0;

            if(fi.exists())
            {
                BufferedReader rd;
                rd = new BufferedReader(new InputStreamReader(new FileInputStream(NormalUser+"TempOldMail.txt"),"UTF-8"));
                oldMailNumber = oldMailNumber + Integer.parseInt(rd.readLine().toString());
                rd.close();
            }

            //Tao một vong lặp để lưu tất cả các thư lại.

            for(int i=0;i<ReceiveMail.nMail;i++)
            {
                String fileName =Login.NormalUser+"Thu"+i+".txt";
                File f = new File(fileName);

                if (f.exists())
                {
                    f.renameTo(new File(NormalUser+"OldMail"+oldMailNumber+".txt"));
                    oldMailNumber++;
                }
            }

             BufferedWriter fw;
             fw = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(NormalUser+"TempOldMail.txt"),"UTF-8"));
             String temp =""+oldMailNumber;
             fw.write(temp);
             fw.close();
        }

    }
    public void GetNewMail()
    {
            String sentMessage = "";
            String receivedMessage = "";
            String soMail="";
            String soMailCu="";
            try {
            Socket s = new Socket(Login.SvAd, 110);
            BufferedReader br = new BufferedReader(new InputStreamReader(s.getInputStream(), "UTF8"));
            BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(s.getOutputStream(),"UTF8"));

            String filetempOldMailServer = NormalUser+"TempOldMailServer.txt";
            BufferedReader rd1;
            rd1 = new BufferedReader(new InputStreamReader(new FileInputStream(filetempOldMailServer),"UTF-8"));
            soMailCu = rd1.readLine();
            rd1.close();

            String us = Login.NormalUser;
            String pw = Login.NormalPass;

            receivedMessage=br.readLine();

            sentMessage="user "+us+"";
            bw.write(sentMessage);
            bw.newLine();
            bw.flush();
            receivedMessage=br.readLine();

            sentMessage="";
            sentMessage="pass "+pw+"";
            bw.write(sentMessage);
            bw.newLine();
            bw.flush();
            receivedMessage=br.readLine();

            sentMessage="";
            sentMessage="list";
            bw.write(sentMessage);
            bw.newLine();
            bw.flush();
            receivedMessage=br.readLine();

            String []temp= receivedMessage.split(" ");
            soMail = temp[1];

            sentMessage="Quit";
            bw.write(sentMessage);
            bw.newLine();
            bw.flush();

            br.close();
            bw.close();
            s.close();


        }
            catch (IOException e)
            {
        }
                // note cho nay
        if(Integer.parseInt(soMailCu)<Integer.parseInt(soMail))
        {
            int n = Integer.parseInt(soMail)- Integer.parseInt(soMailCu);
           JOptionPane.showMessageDialog(null,"Kiểm tra thư định kỳ : Bạn có "+n+" mới !");
        }

        
    }

   
    public void CheckMailShedule() throws IOException
    {
        BufferedReader rd = null;
        try {
            try {
                rd = new BufferedReader(new InputStreamReader(new FileInputStream(Login.NormalUser+"Schedule.txt"),"UTF-8"));
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }

        //Ngay thang nam hien hành
        int day,month,year;

        Date now = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("dd MM yyyy");
        String d = sdf.format(now);
        String []temp= d.split(" ");

        day = Integer.parseInt(temp[0]);
        month = Integer.parseInt(temp[1]);
        year= Integer.parseInt(temp[2]);

        //Ngay thang nam thoi khoa bieu
        int ngay,thang,nam;
        int tempNgay=-1;
        int tempThang=-1;

        String message = rd.readLine();

        String []temp1= message.split(" ");
        ngay = Integer.parseInt(temp1[0]);
        thang = Integer.parseInt(temp1[1]);
        nam = Integer.parseInt(temp1[2]);

        message = rd.readLine();
        
        String []temp2= message.split(" ");
        if(temp2[0].equals("SoNgay"))
            tempNgay = Integer.parseInt(temp2[1]);
        if(temp2[0].equals("SoThang"))
            tempThang = Integer.parseInt(temp2[1]);
          
        rd.close();

        if(day==ngay&&month==thang&&year==nam)
        {
            BufferedWriter fw;
            fw = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(Login.NormalUser+"Schedule.txt"),"UTF-8"));
            
            GetNewMail();
            
            //Tiếp tục lap file luu lịch mới
            if(tempNgay != -1)
            {
               day = day + tempNgay;

               //Kiem tra ngay toi da cua mot thang
               int tempDay = 0;
               if(month==1)
                   tempDay = 31;
                if(month==2)
                   tempDay = 28;
                if(month==3)
                   tempDay = 31;
                if(month==4)
                   tempDay = 30;
                if(month==5)
                   tempDay = 31;
                if(month==6)
                   tempDay = 30;
                if(month==7)
                   tempDay = 31;
                if(month==8)
                   tempDay = 31;
                if(month==9)
                   tempDay = 30;
                if(month==10)
                   tempDay = 31;
                if(month==11)
                   tempDay = 30;
                if(month==12)
                   tempDay = 31;

                //neu nhu vuot qua so ngay gioi than thi tinh lai ngay va tang thang len 1
                while(day>tempDay)
                {
                    day = day - tempDay;
                    month++;
                }

                while(month>12)
                {
                    month = month-12;
                    year++;
                }

                //Tao mot chuoi moi gom ngay thang nam hen de ghi vao file
                String nString = day+" "+month+" "+year;
                fw.write(nString);
                fw.write("\r\nSoNgay "+tempNgay);
            }
            
            //Tiếp tục lập file lưu lịch mới
            if(tempThang != -1)
            {
                month = month + tempThang;

                while(month>12)
                {
                    month = month-12;
                    year++;
                }
                
                int tempDay = 0;

                if(month==1)
                   tempDay = 31;
                if(month==2)
                   tempDay = 28;
                if(month==3)
                   tempDay = 31;
                if(month==4)
                   tempDay = 30;
                if(month==5)
                   tempDay = 31;
                if(month==6)
                   tempDay = 30;
                if(month==7)
                   tempDay = 31;
                if(month==8)
                   tempDay = 31;
                if(month==9)
                   tempDay = 30;
                if(month==10)
                   tempDay = 31;
                if(month==11)
                   tempDay = 30;
                if(month==12)
                   tempDay = 31;

                //neu nhu vuot qua so ngay gioi than thi tinh lai ngay va tang thang len 1
                while(day>tempDay)
                {
                    day = day - tempDay;
                    month++;
                }
                while(month>12)
                {
                    month = month-12;
                    year++;
                }
                //Tao mot chuoi moi gom ngay thang nam hen de ghi vao file
                
                String nString = day+" "+month+" "+year;
                fw.write(nString);
                fw.write("\r\nSoThang "+tempThang);
            }
            //Neu chi hen theo ngay thi xoa luon file do
           
            fw.close();
            
        }
    }
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        //Dang Nhap
        SvAd = txtSvAd.getText().toString();
        String receivedMessage="";
        String sentMessage="";
        try {
        Socket sk = new Socket(SvAd,110);
            //System.out.println(sk.getPort());

            BufferedReader br = new BufferedReader(new InputStreamReader(sk.getInputStream(), "UTF8"));
            BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(sk.getOutputStream(),"UTF8"));
            //Gui user

            User = Base64.encode(txtUser.getText().toString());
            NormalUser = txtUser.getText().toString();
            sentMessage="USER "+txtUser.getText();
            bw.write(sentMessage);
            bw.newLine();
            bw.flush();
            receivedMessage=br.readLine();

            //Gui pass
            PW = Base64.encode(txtPassword.getText().toString());
            NormalPass = txtPassword.getText().toString();
            sentMessage="";
            sentMessage="PASS "+txtPassword.getText();
            bw.write(sentMessage);
            bw.newLine();
            bw.flush();
            receivedMessage=br.readLine();

            sentMessage="";
            sentMessage="STAT";
            bw.write(sentMessage);
            bw.newLine();
            bw.flush();
            receivedMessage=br.readLine();
            
            //Cat chuoi va bat dau so sanh
            String []ST= receivedMessage.split(" ");
            if(ST[0].equals("+OK"))
            {
              System.out.println("Dang nhap thanh cong");
               mnChucNang.setEnabled(true);
               mnHeThong.setEnabled(true);
               jButton1.setEnabled(false);
               jButton1.setVisible(false);
               btnThoat.setEnabled(false);
               btnThoat.setVisible(false);
               txtUser.setEnabled(false);
               txtPassword.setEnabled(false);
               txtSvAd.setEnabled(false);
               this.setTitle("Chào mừng "+NormalUser+" đến với Java Mail Client !");

            }
            else
            {
                sk.close();
                System.out.println("Dang nhap khong thanh cong");
            }
            
            sentMessage ="quit";
            bw.write(sentMessage);
            bw.newLine();
            bw.flush();

            br.close();
            bw.close();
            sk.close();
            
            JOptionPane.showMessageDialog(null,"Bạn đã đăng nhập thành công !");

         

        }
        catch (IOException e){
            {JOptionPane.showMessageDialog(new JFrame(), "Đăng nhập sai thông tin ", "Lỗi đăng nhập", JOptionPane.ERROR_MESSAGE);
               e.printStackTrace();
               System.out.println("Lỗi đăng nhập: " + e.getMessage());
            }
        }

        
        try {
            CheckMailShedule();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void txtThoatMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtThoatMousePressed
        try {
            // TODO add your handling code here:
            SaveOldMail();
            //TempOldMailServer();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.exit(0);

    }//GEN-LAST:event_txtThoatMousePressed

    private void jMenuItem3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem3MousePressed
        // TODO add your handling code here:
        new MailList().setVisible(true);
    }//GEN-LAST:event_jMenuItem3MousePressed

    private void jMenuItem4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem4MousePressed
        // TODO add your handling code here:
        new DeleteMail().setVisible(true);
    }//GEN-LAST:event_jMenuItem4MousePressed

    private void jMenuItem5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem5MousePressed
        try {
            // TODO add your handling code here:
            SaveOldMail();
           // TempOldMailServer();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
       mnChucNang.setEnabled(false);
       mnHeThong.setEnabled(false);
       jButton1.setEnabled(true);
       jButton1.setVisible(true);
       btnThoat.setEnabled(true);
       btnThoat.setVisible(true);
       txtUser.setEnabled(true);
       txtUser.setText("");
       txtPassword.setEnabled(true);
       txtPassword.setText("");
       txtSvAd.setEnabled(true);
       txtSvAd.setText("");
    }//GEN-LAST:event_jMenuItem5MousePressed

    private void mnThayDoiSVMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnThayDoiSVMousePressed
        // TODO add your handling code here:
        new MailSvAddress().setVisible(true);
    }//GEN-LAST:event_mnThayDoiSVMousePressed

    private void mnChucNangMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnChucNangMousePressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_mnChucNangMousePressed

    private void formWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeactivated
       
    }//GEN-LAST:event_formWindowDeactivated

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
       
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            // TODO add your handling code here:
            SaveOldMail();
            //TempOldMailServer();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    private void jMenu1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MousePressed
        // TODO add your handling code here:
        new Infomation().setVisible(true);
    }//GEN-LAST:event_jMenu1MousePressed

    private void jMenuItem6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem6MousePressed
        // TODO add your handling code here:
        new MailSchedule().setVisible(true);
    }//GEN-LAST:event_jMenuItem6MousePressed

    private void jMenuItem7MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem7MousePressed
        // TODO add your handling code here:
        new CheckMailSecond().setVisible(true);
    }//GEN-LAST:event_jMenuItem7MousePressed
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
     
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
                new CheckMailSecond().setVisible(true);
                              
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenu mnChucNang;
    private javax.swing.JMenu mnHeThong;
    private javax.swing.JMenuItem mnThayDoiSV;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtSvAd;
    private javax.swing.JMenuItem txtThoat;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables

}
